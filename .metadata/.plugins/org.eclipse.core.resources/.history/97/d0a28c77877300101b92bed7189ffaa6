package com.lms;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Library library = new Library();
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to the Library Management System!");

        boolean running = true;
        while (running) {
            System.out.println("\n--- Menu ---");
            System.out.println("1. Add a Book");
            System.out.println("2. Add a User");
            System.out.println("3. Issue a Book");
            System.out.println("4. Return a Book");
            System.out.println("5. View All Books");
            System.out.println("6. View All Users");
            System.out.println("7. Exit");
            System.out.print("Please enter your choice (1-7): ");

            String input = scanner.nextLine();
            switch (input) {
                case "1":
                    addBook(library, scanner);
                    break;
                case "2":
                    addUser(library, scanner);
                    break;
                case "3":
                    issueBook(library, scanner);
                    break;
                case "4":
                    returnBook(library, scanner);
                    break;
                case "5":
                    displayBooks(library);
                    break;
                case "6":
                    displayUsers(library);
                    break;
                case "7":
                    System.out.println("Thank you for using the Library Management System. Goodbye!");
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice. Please select a number from 1 to 7.");
            }
        }
        scanner.close();
    }

    private static void addBook(Library library, Scanner scanner) {
        System.out.print("Enter Book ID: ");
        String bookId = scanner.nextLine().trim();
        if (library.findBookById(bookId) != null) {
            System.out.println("A book with this ID already exists!");
            return;
        }
        System.out.print("Enter Book Title: ");
        String title = scanner.nextLine().trim();
        System.out.print("Enter Book Author: ");
        String author = scanner.nextLine().trim();

        Book book = new Book(bookId, title, author);
        library.addBook(book);
        System.out.println("Book \"" + title + "\" added successfully.");
    }

    private static void addUser(Library library, Scanner scanner) {
        System.out.print("Enter User ID: ");
        String userId = scanner.nextLine().trim();
        if (library.findUserById(userId) != null) {
            System.out.println("A user with this ID already exists!");
            return;
        }
        System.out.print("Enter User Name: ");
        String userName = scanner.nextLine().trim();

        User user = new User(userId, userName);
        library.addUser(user);
        System.out.println("User \"" + userName + "\" added successfully.");
    }

    private static void issueBook(Library library, Scanner scanner) {
        System.out.print("Enter Book ID to issue: ");
        String bookId = scanner.nextLine().trim();
        System.out.print("Enter User ID: ");
        String userId = scanner.nextLine().trim();

        boolean success = library.issueBook(bookId, userId);
        if (success) {
            System.out.println("Book (ID: " + bookId + ") issued to user (ID: " + userId + ").");
        } else {
            Book book = library.findBookById(bookId);
            User user = library.findUserById(userId);
            if (book == null) {
                System.out.println("Issue failed: Book not found.");
            } else if (user == null) {
                System.out.println("Issue failed: User not found.");
            } else if (book.isIssued()) {
                System.out.println("Issue failed: Book is already issued.");
            } else if (user.getIssuedBook() != null) {
                System.out.println("Issue failed: User already has a book issued.");
            } else {
                System.out.println("Issue failed: Unknown reason.");
            }
        }
    }

    private static void returnBook(Library library, Scanner scanner) {
        System.out.print("Enter User ID to return book: ");
        String userId = scanner.nextLine().trim();

        boolean success = library.returnBook(userId);
        if (success) {
            System.out.println("Book successfully returned by user (ID: " + userId + ").");
        } else {
            System.out.println("Return failed: User not found or no book issued to this user.");
        }
    }

    private static void displayBooks(Library library) {
        System.out.println("\n--- List of Books ---");
        boolean anyBooks = false;
        for (Book book : library.getBooks()) {
            System.out.printf("ID: %s, Title: %s, Author: %s, Issued: %s%n",
                book.getId(), book.getTitle(), book.getAuthor(),
                (book.isIssued() ? "Yes" : "No"));
            anyBooks = true;
        }
        if (!anyBooks) {
            System.out.println("No books available.");
        }
    }

    private static void displayUsers(Library library) {
        System.out.println("\n--- List of Users ---");
        boolean anyUsers = false;
        for (User user : library.getUsers()) {
            System.out.printf("ID: %s, Name: %s, Book Issued: %s%n",
                user.getUserId(), user.getName(),
                (user.getIssuedBook() != null ? user.getIssuedBook().getTitle() : "None"));
            anyUsers = true;
        }
        if (!anyUsers) {
            System.out.println("No users available.");
        }
    }
}
